- name: Run playbook
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/clone_vars.yml
  roles:
    - role: clone_app

#The below play is specifically for a demo to utilize the clone 
#To use the clone created in the previous play for CI/CD or brownfield upgrades
- name: Upgrade the application (just for demo)
  hosts: localhost
  gather_facts: false
  become: true
  vars:
    helm_version: 3.8.0   
    kubectl_version: 1.23.3
    helm_release_name: wp
    helm_chart: bitnami/wordpress
    app_namespace: wordpress
    wp_image_tag: 5.9.0-debian-10-r5
    image_pullsecret_name: docker-registry-cred
    wp_password: password123
    db_password: password123
    db_root_password: password123
    kubeconfig_path: "/home/admin/kubeconfig.yml"
  tasks:
    - ansible.builtin.command: 
        cmd: ansible-galaxy install -r collections/requirements.yml
    - name: Download and extract helm
      ansible.builtin.unarchive:
        src: "https://get.helm.sh/helm-v{{ helm_version }}-linux-amd64.tar.gz"
        dest: /tmp
        remote_src: yes
    - name: Copy helm to path
      copy:
        src: /tmp/linux-amd64/helm
        dest: /usr/local/bin/helm
        mode: 0755
    - name: Download kubectl
      ansible.builtin.get_url:
        url: "https://storage.googleapis.com/kubernetes-release/release/v{{ kubectl_version }}/bin/linux/amd64/kubectl"
        dest: /usr/local/bin/kubectl
        mode: 0755
    - name: Add bitnami repo
      kubernetes.core.helm_repository:
        name: bitnami
        repo_url: https://charts.bitnami.com/bitnami
    - name: Upgrade the application using helm
      kubernetes.core.helm: 
        release_name: "{{ helm_release_name }}"
        chart_ref: "{{ helm_chart }}"
        update_repo_cache: true
        wait: true
        wait_timeout: 900s #Set the timeout according to the app buildup time
        release_namespace: "{{ app_namespace }}"
        kubeconfig: "{{ kubeconfig_path }}"
        release_values:
          global:
            imagepullSecrets:
              - name: "{{ image_pullsecret_name }}"
          image:
            tag: "{{ wp_image_tag }}" 
          wordpressPassword: "{{ wp_password }}"
          mariadb:
            auth:
              password: "{{ db_password }}"
              rootPassword: "{{ db_root_password }}"
            primary:
              persistence:
                accessModes:
                  - ReadWriteMany
          persistence:
            accessModes: 
              - ReadWriteMany
